<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>shikokuchuo{net}</title>
    <link>https://shikokuchuo.net/</link>
    <atom:link href="https://shikokuchuo.net/index.xml" rel="self" type="application/rss+xml"/>
    <description>shikokuchuo.net
</description>
    <image>
      <title>shikokuchuo{net}</title>
      <url>https://shikokuchuo.net/favicon.png</url>
      <link>https://shikokuchuo.net/</link>
    </image>
    <generator>Distill</generator>
    <lastBuildDate>Wed, 07 Sep 2022 00:00:00 +0000</lastBuildDate>
    <item>
      <title>nanonext - a web toolkit</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/19-nanonext-webtools</link>
      <description>


&lt;img src="file3d932489d951_files/figure-html/index-1.png" width="672" /&gt;
&lt;aside&gt;
Shikokuchuo
&lt;/aside&gt;
&lt;p&gt;&lt;br /&gt; The previous two articles have centered on the main uses which
led to the creation of Nanonext - the desire to bridge code written in
different languages, as well as the ability to perform actions
concurrently.&lt;/p&gt;
&lt;p&gt;This article aims to highlight the additional features that have been
built around the core capabilities in the NNG library that actually make
it a very good tool for interacting with the web.&lt;/p&gt;
&lt;p&gt;This is especially relevant as version 0.5.5 just released to CRAN
integrates the ‘mbedtls’ library providing TLS support for secure
websites and websocket connections across all platforms.&lt;/p&gt;
&lt;p&gt;The package has also made it into the ‘Web Technologies’ CRAN Task
View under ‘Core Tools For HTTP Requests’: &lt;a
href="https://cran.r-project.org/web/views/WebTechnologies.html"
class="uri"&gt;https://cran.r-project.org/web/views/WebTechnologies.html&lt;/a&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(nanonext)&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="ncurl---a-minimalist-async-https-client"&gt;ncurl - a minimalist
(async) http(s) client&lt;/h3&gt;
&lt;p&gt;For normal use, it takes just the URL.&lt;/p&gt;
&lt;p&gt;It can follow redirects.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;ncurl(&amp;quot;https://httpbin.org/headers&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$status
[1] 200

$headers
NULL

$raw
  [1] 7b 0a 20 20 22 68 65 61 64 65 72 73 22 3a 20 7b 0a 20 20 20 20
 [22] 22 48 6f 73 74 22 3a 20 22 68 74 74 70 62 69 6e 2e 6f 72 67 22
 [43] 2c 20 0a 20 20 20 20 22 58 2d 41 6d 7a 6e 2d 54 72 61 63 65 2d
 [64] 49 64 22 3a 20 22 52 6f 6f 74 3d 31 2d 36 33 31 61 34 39 65 30
 [85] 2d 33 33 65 63 64 35 32 65 37 38 37 30 31 38 33 36 30 61 66 31
[106] 65 63 63 30 22 0a 20 20 7d 0a 7d 0a

$data
[1] &amp;quot;{\n  \&amp;quot;headers\&amp;quot;: {\n    \&amp;quot;Host\&amp;quot;: \&amp;quot;httpbin.org\&amp;quot;, \n    \&amp;quot;X-Amzn-Trace-Id\&amp;quot;: \&amp;quot;Root=1-631a49e0-33ecd52e787018360af1ecc0\&amp;quot;\n  }\n}\n&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Whilst it is designed to be minimalist and easy to use, the real
power however lies in its ability to use other methods such as POST or
PUT, and the ability of the arguments ‘headers’ and ‘data’ to take
arbitrary values that are sent in the HTTP request.&lt;/p&gt;
&lt;p&gt;This makes it perfect as a client for making REST API calls, and is
indeed a rather performant solution.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;res &amp;lt;- ncurl(&amp;quot;http://httpbin.org/post&amp;quot;,
             async = TRUE,
             convert = FALSE,
             method = &amp;quot;POST&amp;quot;,
             headers = c(`Content-Type` = &amp;quot;application/json&amp;quot;, Authorization = &amp;quot;Bearer APIKEY&amp;quot;),
             data = &amp;#39;{&amp;quot;key&amp;quot;: &amp;quot;value&amp;quot;}&amp;#39;,
             request = c(&amp;quot;Date&amp;quot;, &amp;quot;Server&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;‘async’ is set to TRUE to return an ‘ncurlAio’ object
immediately, with the request happening asynchronously. The data will be
available once resolved, or if called explicitly (which will
wait).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘convert’ is set to FALSE so time is not wasted converting the
raw data to characters, which is useful when, for example, a JSON parser
can directly parse the raw bytes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‘request’ is specified to return the requested response
headers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;res&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt; ncurlAio &amp;gt;
 - $status for response status code
 - $headers for requested response headers
 - $raw for raw message
 - $data for message data&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;call_aio(res)$status&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 200&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;res$headers&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$Date
[1] &amp;quot;Thu, 08 Sep 2022 20:00:32 GMT&amp;quot;

$Server
[1] &amp;quot;gunicorn/19.9.0&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;res$raw&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  [1] 7b 0a 20 20 22 61 72 67 73 22 3a 20 7b 7d 2c 20 0a 20 20 22 64
 [22] 61 74 61 22 3a 20 22 7b 5c 22 6b 65 79 5c 22 3a 20 5c 22 76 61
 [43] 6c 75 65 5c 22 7d 22 2c 20 0a 20 20 22 66 69 6c 65 73 22 3a 20
 [64] 7b 7d 2c 20 0a 20 20 22 66 6f 72 6d 22 3a 20 7b 7d 2c 20 0a 20
 [85] 20 22 68 65 61 64 65 72 73 22 3a 20 7b 0a 20 20 20 20 22 41 75
[106] 74 68 6f 72 69 7a 61 74 69 6f 6e 22 3a 20 22 42 65 61 72 65 72
[127] 20 41 50 49 4b 45 59 22 2c 20 0a 20 20 20 20 22 43 6f 6e 74 65
[148] 6e 74 2d 4c 65 6e 67 74 68 22 3a 20 22 31 36 22 2c 20 0a 20 20
[169] 20 20 22 43 6f 6e 74 65 6e 74 2d 54 79 70 65 22 3a 20 22 61 70
[190] 70 6c 69 63 61 74 69 6f 6e 2f 6a 73 6f 6e 22 2c 20 0a 20 20 20
[211] 20 22 48 6f 73 74 22 3a 20 22 68 74 74 70 62 69 6e 2e 6f 72 67
[232] 22 2c 20 0a 20 20 20 20 22 58 2d 41 6d 7a 6e 2d 54 72 61 63 65
[253] 2d 49 64 22 3a 20 22 52 6f 6f 74 3d 31 2d 36 33 31 61 34 39 65
[274] 30 2d 32 61 64 64 36 35 65 39 36 32 34 35 37 36 63 64 36 66 33
[295] 34 38 38 31 62 22 0a 20 20 7d 2c 20 0a 20 20 22 6a 73 6f 6e 22
[316] 3a 20 7b 0a 20 20 20 20 22 6b 65 79 22 3a 20 22 76 61 6c 75 65
[337] 22 0a 20 20 7d 2c 20 0a 20 20 22 6f 72 69 67 69 6e 22 3a 20 22
[358] 31 38 35 2e 32 32 35 2e 34 35 2e 34 39 22 2c 20 0a 20 20 22 75
[379] 72 6c 22 3a 20 22 68 74 74 70 3a 2f 2f 68 74 74 70 62 69 6e 2e
[400] 6f 72 67 2f 70 6f 73 74 22 0a 7d 0a&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function is named ‘ncurl’ after the ubiquitous ‘curl’, but it
uses a completely different technology stack, leveraging the ‘NNG’ and
‘MbedTLS’ libraries instead.&lt;/p&gt;
&lt;h3 id="stream---websocket-client"&gt;stream - websocket client&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;stream()&lt;/code&gt; exposes NNG’s low-level byte stream interface
for communicating with raw sockets. This may be used for connecting to
arbitrary non-NNG endpoints.&lt;/p&gt;
&lt;p&gt;Perhaps its most important use (in connection with the web at least),
is for communicating with (secure) websocket servers. The argument
textframes = TRUE can be specified where the websocket server uses text
rather than binary frames, which is often the case.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# official demo API key used below
s &amp;lt;- stream(dial = &amp;quot;wss://ws.eodhistoricaldata.com/ws/forex?api_token=OeAFFmMliFG5orCUuwAKQ8l4WWFQ67YX&amp;quot;,
            textframes = TRUE)
s&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt; nanoStream &amp;gt;
 - type: dialer 
 - url: wss://ws.eodhistoricaldata.com/ws/forex?api_token=OeAFFmMliFG5orCUuwAKQ8l4WWFQ67YX 
 - textframes: TRUE &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;send()&lt;/code&gt; and &lt;code&gt;recv()&lt;/code&gt;, as well as their
asynchronous counterparts &lt;code&gt;send_aio()&lt;/code&gt; and
&lt;code&gt;recv_aio()&lt;/code&gt; can be used on Streams in the same way as
Sockets.&lt;/p&gt;
&lt;p&gt;This affords a great deal of flexibility in ingesting, manipulating
and processing streaming data.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;s |&amp;gt; recv(keep.raw = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;{\&amp;quot;status_code\&amp;quot;:200,\&amp;quot;message\&amp;quot;:\&amp;quot;Authorized\&amp;quot;}&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;s |&amp;gt; send(&amp;#39;{&amp;quot;action&amp;quot;: &amp;quot;subscribe&amp;quot;, &amp;quot;symbols&amp;quot;: &amp;quot;EURUSD&amp;quot;}&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] 7b 22 61 63 74 69 6f 6e 22 3a 20 22 73 75 62 73 63 72 69 62 65 22
[23] 2c 20 22 73 79 6d 62 6f 6c 73 22 3a 20 22 45 55 52 55 53 44 22 7d
[45] 00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;s |&amp;gt; recv(keep.raw = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;{\&amp;quot;s\&amp;quot;:\&amp;quot;EURUSD\&amp;quot;,\&amp;quot;a\&amp;quot;:0.99985,\&amp;quot;b\&amp;quot;:0.99978,\&amp;quot;dc\&amp;quot;:\&amp;quot;0.0090\&amp;quot;,\&amp;quot;dd\&amp;quot;:\&amp;quot;0.0001\&amp;quot;,\&amp;quot;ppms\&amp;quot;:false,\&amp;quot;t\&amp;quot;:1662667233000}&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;s |&amp;gt; recv(keep.raw = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;{\&amp;quot;s\&amp;quot;:\&amp;quot;EURUSD\&amp;quot;,\&amp;quot;a\&amp;quot;:0.99984,\&amp;quot;b\&amp;quot;:0.99977,\&amp;quot;dc\&amp;quot;:\&amp;quot;0.0080\&amp;quot;,\&amp;quot;dd\&amp;quot;:\&amp;quot;0.0001\&amp;quot;,\&amp;quot;ppms\&amp;quot;:false,\&amp;quot;t\&amp;quot;:1662667234000}&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;close(s)&lt;/code&gt;&lt;/pre&gt;
&lt;h3
id="sha224256384512---cryptographic-hash-and-hmac-algorithms"&gt;sha[224|256|384|512]
- cryptographic hash and HMAC algorithms&lt;/h3&gt;
&lt;p&gt;As ‘nanonext’ now links to the ‘mbedtls’ library as well as ‘NNG’,
the series of SHA-2 crypographic hash functions have been added to the
package: &lt;code&gt;sha224()&lt;/code&gt;, &lt;code&gt;sha256()&lt;/code&gt;,
&lt;code&gt;sha384()&lt;/code&gt; and &lt;code&gt;sha512()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These call the secure, optimized implementations from the ‘MbedTLS’
library and return a hash as a raw vector. These can be compared
directly for authentication. Alternatively, &lt;code&gt;as.character()&lt;/code&gt;
may be used to return a character string of the hash value.&lt;/p&gt;
&lt;p&gt;To generate an HMAC (hash-based message authentication code), simply
supply the value ‘key’ to use as the secret key. Many REST APIs require
the request strings to be signed, and now the ‘nanonext’ package
provides a fast and reliable method of generating a SHA-256 HMAC for
this purpose.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;sha256(&amp;quot;hello world!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;75 09 e5 bd a0 c7 62 d2 ba c7 f9 0d 75 8b 5b 22 63 fa 01 cc bc 54 2a b5 e3 df 16 3b e0 8e 6c a9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;as.character(sha256(&amp;quot;hello world!&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;7509e5bda0c762d2bac7f90d758b5b2263fa01ccbc542ab5e3df163be08e6ca9&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;sha256(&amp;quot;hello world!&amp;quot;, key = &amp;quot;MY_SECRET&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;d8 f0 e2 d3 68 ff 63 26 82 d5 5e 2c 1c cd 49 c1 5f 8a 6a 38 62 d8 eb 68 f1 90 6b 6e e6 58 89 0a&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="messenger---console-based-instant-messaging"&gt;messenger -
console-based instant messaging&lt;/h3&gt;
&lt;p&gt;There is also &lt;code&gt;messenger()&lt;/code&gt; which is not so easy to
demonstrate here as it is by nature interactive, but it is in effect a
2-way walkie talkie which can be connected to a TCP/IP or other socket
address. This is a rather fun demonstration of how a multi-threaded
application can be built using the NNG framework.&lt;/p&gt;
&lt;p&gt;Whilst this function has been around for quite a few versions of
‘nanonext’, the recent addition of authentication based on a pre-shared
key makes it a somewhat viable solution rather than just something for
fun. We encourage you to give it a try and play around with it.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;?messenger&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Package website: &lt;a href="https://shikokuchuo.net/nanonext/"
class="uri"&gt;https://shikokuchuo.net/nanonext/&lt;/a&gt; On CRAN: &lt;a
href="https://cran.r-project.org/package=nanonext"
class="uri"&gt;https://cran.r-project.org/package=nanonext&lt;/a&gt;&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>e2929b7d625511cd065212f0d3cbb35b</distill:md5>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/19-nanonext-webtools</guid>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/19-nanonext-webtools/nanonext-webtools_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Re-introducing mirai - a minimalist async evaluation framework for R</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/18-reintroducing-mirai</link>
      <description>Concurrent code execution with maximum flexibility and automatic resolution</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/18-reintroducing-mirai</guid>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/18-reintroducing-mirai/reintroducing-mirai_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>nanonext - how it provides a concurrency framework for R</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/17-nanonext-concurrency</link>
      <description>True async with automatic resolution</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/17-nanonext-concurrency</guid>
      <pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/17-nanonext-concurrency/nanonext-concurrency_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Introducing mirai - a minimalist async evaluation framework for R</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/16-introducing-mirai</link>
      <description>Concurrency and parallel code execution</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/16-introducing-mirai</guid>
      <pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/16-introducing-mirai/introducing-mirai_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>nanonext for Cross-language Data Exchange</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/15-nanonext-exchange</link>
      <description>A clean and robust approach to R / Python interoperability</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/15-nanonext-exchange</guid>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/15-nanonext-exchange/nanonext-exchange_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Installing an R Build Environment on Solaris</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/14-r-on-solaris</link>
      <description>Run R CMD check or devtools::check() on a local Solaris VM</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/14-r-on-solaris</guid>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/14-r-on-solaris/r-on-solaris_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Reverting Git Commits</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/13-reverting</link>
      <description>Procedure to roll back both local and remote changes</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/13-reverting</guid>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/13-reverting/reverting_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>R Shiny interface for the OANDA fxTrade API</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/12-oanda-studio</link>
      <description>ichimoku::oanda_studio()</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/12-oanda-studio</guid>
      <pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/12-oanda-studio/oanda-studio_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Efficient R: Performant data.frame constructors</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/11-dataframes</link>
      <description>How and when to use an alternative to as.data.frame</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/11-dataframes</guid>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/11-dataframes/dataframes_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Efficient R: Combinations using expand.grid</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/10-combinations</link>
      <description>A faster way to generate combinations for mapply and vapply</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/10-combinations</guid>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/10-combinations/combinations_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Efficient R: do.call / lapply</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/09-docall-lapply</link>
      <description>A distinctive coding style</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/09-docall-lapply</guid>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/09-docall-lapply/docall-lapply_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>ichimoku</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/08-ichimoku</link>
      <description>R package for Ichimoku Kinko Hyo cloud charts</description>
      <category>R</category>
      <category>Quantitative Finance</category>
      <guid>https://shikokuchuo.net/posts/08-ichimoku</guid>
      <pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/08-ichimoku/ichimoku_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Resources for learning</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/07-learning</link>
      <description>A curated selection of online MOOCs</description>
      <category>Resources</category>
      <category>Learning</category>
      <guid>https://shikokuchuo.net/posts/07-learning</guid>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/07-learning/learning_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Datasets</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/06-datasets</link>
      <description>For Econometrics and Machine Learning</description>
      <category>Resources</category>
      <category>Data</category>
      <guid>https://shikokuchuo.net/posts/06-datasets</guid>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/06-datasets/datasets_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Distill for R Markdown</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/04-distill</link>
      <description>Web publishing optimised for scientific and technical communication</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/04-distill</guid>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/04-distill/distill_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Github Actions with R</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/05-ghactions</link>
      <description>Deploy and automate your code to the cloud</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/05-ghactions</guid>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/05-ghactions/ghactions_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>R | Selenium</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/03-rselenium</link>
      <description>Programmatically drive a web browser</description>
      <category>R</category>
      <guid>https://shikokuchuo.net/posts/03-rselenium</guid>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/03-rselenium/rselenium_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Resources for global sustainability</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/02-resources</link>
      <description>A compendium</description>
      <category>Resources</category>
      <category>Sustainability</category>
      <guid>https://shikokuchuo.net/posts/02-resources</guid>
      <pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/02-resources/resources_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Authenticating photography using cryptographic hashing</title>
      <dc:creator>shikokuchuo</dc:creator>
      <link>https://shikokuchuo.net/posts/01-authenticating</link>
      <description>A proof of concept using R</description>
      <category>Photography</category>
      <category>Cryptography</category>
      <guid>https://shikokuchuo.net/posts/01-authenticating</guid>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://shikokuchuo.net/posts/01-authenticating/authenticating_files/figure-html5/index-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
  </channel>
</rss>
