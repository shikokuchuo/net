[
  {
    "path": "posts/2021-05-02-resources/",
    "title": "Resources for global sustainability",
    "description": "A compendium",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-02",
    "categories": [],
    "contents": "\n\nContents\nStockholm Resilience Center\nThe National Academies of Sciences, Engineering, and Medicine\nBBC\nCoursera\nTED\n\n\n\n                                                            sha256\n1 3018cd1a5f671835e3116c2e2c6f937cf335b630cecc7de5d59b4059cff16999\n\n\nDawn over Shikokuchuo\nStockholm Resilience Center\nSustainability science for biosphere stewardship, Stockholm University\nVideo: Our future in the Anthropocene biosphere\n\n\nThe National Academies of Sciences, Engineering, and Medicine\nNobel Prize Laureates and Other Experts Issue Urgent Call for Action After ‘Our Planet, Our Future’ Summit\nhttps://www.nationalacademies.org/news/2021/04/nobel-prize-laureates-and-other-experts-issue-urgent-call-for-action-after-our-planet-our-future-summit\nBBC\nGreta Thunberg: A Year to change the World\nhttps://bbc.co.uk/ayeartochangetheworld\nCoursera\nSolving Complex Problems Specialization - uses the framework of Big History to combine knowledge across the sciences and humanities to provide a foundation for thinking and research in new ways. One of the creators of the course, Professor David Christian, has presented on topics including “Interdisciplinary Approaches to Solving 21st Century Challenges” at the World Economic Forum (WEF).\nhttps://www.coursera.org/specializations/solving-complex-problems\nTED\nStephen Hawking, “Questioning the universe”, TED February 2008\n\n\n\n\n\n\n\nTranscript: 09:06 | Stephen Hawking: I think it quite likely that we are the only civilization within several hundred light years; otherwise we would have heard radio waves. The alternative is that civilizations don’t last very long, but destroy themselves.\n\n\n\n",
    "preview": "posts/2021-05-02-resources/resources_files/figure-html5/index-1.png",
    "last_modified": "2021-05-02T22:58:31+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-05-01-authenticating/",
    "title": "Authenticating photography using cryptographic hashing",
    "description": "A proof of concept using R",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-01",
    "categories": [],
    "contents": "\n\nContents\nReproducible R code and authentification\nAs applied to a digital photography workflow\n\nReproducible R code and authentification\nR is an open source programming language popular amongst statisticians and data scientists. The power of the R framework is enhanced through the tens of thousands of packages contributed by the open source community that extends and enhances R. 1\nThe below code is a simple proof of concept of using cryptographic hashing as a method for authentification of original photographic files. The code simply retrieves the files in a certain folder and loads them into R using the imager 2 package and plots them, here on the page, but it could easily be another output device such as writing to jpeg or pdf. At the same time, the original file is run through a sha256 cryptographic hash from the openssl 3 package. sha256 is a one-way algorithm that takes an input and generates a hexadecimal sequence 64 long. As the input file may be arbitrarily large, it can easily be seen that the information loss in arriving at the hash precludes the possibility of going in the other direction i.e. retrieving the original data from the hash. The properties of the hashing algorithm include that small changes to the input file can result in completely different hash values. The chances of collision i.e. two different data files generating the exact same hash is vanishingly small.\n\n\nphotos <- file.path(\"_images\", list.files(\"_images\"))\ndevelop <- function(x) {\n  plot(imager::load.image(x), axes = FALSE)\n  paste0(openssl::sha256(file(x)))\n}\npar(mar = c(0, 0, 0, 0))\ndata.frame(sha256 = do.call(rbind, lapply(photos, develop)))\n\n\n\n                                                            sha256\n1 cba0450d38b74f2585868d2aa026a96de735a8f73a54889366d62bbdfdcc8661\n2 a63b055e11765cf36fa065be413b0bb5deb89d6cfba0c9feac7b9946e9c76ece\n3 deebda75318682cfdc1bb7fe67d313e387a27754afc8edabf60d4fd812495dfb\n4 db79682f8bee39d7ed9231200fd076ebed92a4471a9f3ce611d0a5a28bb984a3\n\n\nNote: sha256 hashes are of the original files. Saving and hashing the images on this page would produce completely different hashes.\nThe output image along with the sha256 hash of the original can then be published together. The photographer is then able to freely share their work, which does not then need to be downsized, degraded or watermarked, as long as the data of the original file has undergone some form of transformation (that is not trivially reversible) to produce the output. The hash is the proof of authenticity of the original, which only the original artist possesses.\nTo prove authorship, the artist just needs to run the above function again, which would produce the same output and same hash values, and is an example of the benefits of reproducibility in writing R code.\nAs applied to a digital photography workflow\nEquivalent to the example demonstrated here, the workflow of digital photographers is often to take a RAW camera file, and perform edits using photo processing software 4, before generating an output. Software generally keeps the RAW file intact as a form of “digital negative”, but adds the edits in a layer stored separately either as a “sidecar” file or in a database etc. depending on the software. Photographers often take the output and store a best quality version as their “master”.\nOur approach would differ in treating the RAW file as the “original”, which allows a high-quality output to then be published along with the sha256 of the RAW file. The artist retains the RAW file, along with the sidecar file and software that generates the output, as proof of authorship. This works of course only where the artist can ensure reproducibility of the output, and using open source software where the edits are stored transparently in a human-readable format would afford greater confidence in such a workflow.\n\nThe largest listing of packages may be found at The Comprehensive R Archive Network: https://cloud.r-project.org/↩︎\nimager R package: https://dahtah.github.io/imager/↩︎\nopenssl R package: https://github.com/jeroen/openssl↩︎\nA popular example of such photo-editing software is the open source Darktable https://www.darktable.org/↩︎\n",
    "preview": "posts/2021-05-01-authenticating/authenticating_files/figure-html5/index-1.png",
    "last_modified": "2021-05-02T22:58:21+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
