[
  {
    "path": "posts/2021-05-14-learning/",
    "title": "Resources for learning",
    "description": "A refined selection of online MOOCs",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-14",
    "categories": [],
    "contents": "\n\nContents\nDuke University Statistics with R Specialization\nDuke University Entrepreneurial Finance: Strategy and Innovation Specialization\n\n\n\n                                                            sha256\n1 deebda75318682cfdc1bb7fe67d313e387a27754afc8edabf60d4fd812495dfb\n\n\nShikokuchuo  Iyo Mishima station\nDuke University Statistics with R Specialization\nhttps://www.coursera.org/specializations/statistics\nAnalyze and visualize data in R and create reproducible data analysis reports\nDemonstrate a conceptual understanding of the unified nature of statistical inference\nPerform frequentist and Bayesian statistical inference and modeling to understand natural phenomena and make data-based decisions\nCommunicate statistical results correctly, effectively, and in context without relying on statistical jargon\nCritique data-based claims and evaluate data-based decisions\nWrangle and visualize data with R packages for data analysis.\nYou will produce a portfolio of data analysis projects from the Specialization that demonstrates mastery of statistical data analysis from exploratory analysis to inference to modeling, suitable for applying for statistical analysis or data scientist positions.\nDuke University Entrepreneurial Finance: Strategy and Innovation Specialization\nhttps://www.coursera.org/specializations/entrepreneurial-finance\nFrom entrepreneurs to executives, this Specialization provides an opportunity to learn how to advance business innovation in your company and gain insights from leading faculty in the Fuqua School of Business at Duke University.\nEvaluate entrepreneurial ventures, including high-growth startups, using Excel spreadsheet models\nDiscern between the tradeoffs of different financing strategies: loan investments, venture capital, angel investing, and crowdfunding\nHow to manage a startup’s financing strategy\nHow to build capitalization tables (or “cap tables”) in Excel\nUse cap tables to explore different financing strategies for your startup company and determine which financing decisions are best for your entrepreneurial venture\nAnalysis of blockchain technologies\nIdentify opportunities to disrupt and innovate business models using blockchain as well as avoid poorly executed applications of blockchain to business\nHow to use R programming to calculate the return of a stock portfolio and quantify the market risk of that portfolio\n\n\n\n",
    "preview": "posts/2021-05-14-learning/learning_files/figure-html5/index-1.png",
    "last_modified": "2021-05-14T23:58:12+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-05-05-datasets/",
    "title": "Datasets",
    "description": "For Econometrics and Machine Learning",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-05",
    "categories": [],
    "contents": "\n\nContents\nDatasets\n\n\n\n                                                            sha256\n1 1124bc02f0f74585e8f434a918970cf6671530e263eff4f1aa330a2b54c93873\n\n\nShikokuchuo\nDatasets\n\n\nlibrary(magrittr)\ntibble::tribble(\n  ~Source, ~URL, ~Package,\n  \"Fred\", \"https://fred.stlouisfed.org/\", \"Quantmod\",\n  \"Quandl\", \"https://www.quandl.com/\", \"Quandl\",\n  \"Yahoo Finance\", \"https://finance.yahoo.com/\", \"Quantmod\",\n  \"Damodaran NYU Stern\", \"http://people.stern.nyu.edu/adamodar/New_Home_Page/datacurrent.html\", \"\",\n  \"UCI Machine Learning Repository\", \"https://archive.ics.uci.edu/ml/index.php\", \"\",\n  \"Project Gutenberg\", \"https://www.gutenberg.org/\", \"gutenbergr\"\n) %>%\n  dplyr::mutate(URL = purrr::map_chr(URL, ~paste0(\"<a href='\", .x, \"'>\", .x, \"<\/a>\"))) %>%\n  DT::datatable(escape = FALSE)\n\n\n\n{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[\"Fred\",\"Quandl\",\"Yahoo Finance\",\"Damodaran NYU Stern\",\"UCI Machine Learning Repository\",\"Project Gutenberg\"],[\"<a href='https://fred.stlouisfed.org/'>https://fred.stlouisfed.org/<\\/a>\",\"<a href='https://www.quandl.com/'>https://www.quandl.com/<\\/a>\",\"<a href='https://finance.yahoo.com/'>https://finance.yahoo.com/<\\/a>\",\"<a href='http://people.stern.nyu.edu/adamodar/New_Home_Page/datacurrent.html'>http://people.stern.nyu.edu/adamodar/New_Home_Page/datacurrent.html<\\/a>\",\"<a href='https://archive.ics.uci.edu/ml/index.php'>https://archive.ics.uci.edu/ml/index.php<\\/a>\",\"<a href='https://www.gutenberg.org/'>https://www.gutenberg.org/<\\/a>\"],[\"Quantmod\",\"Quandl\",\"Quantmod\",\"\",\"\",\"gutenbergr\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Source<\\/th>\\n      <th>URL<\\/th>\\n      <th>Package<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\n\n\n\n",
    "preview": "posts/2021-05-05-datasets/datasets_files/figure-html5/index-1.png",
    "last_modified": "2021-05-05T14:00:42+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-05-04-distill/",
    "title": "Distill for R Markdown",
    "description": "Web publishing optimised for scientific and technical communication",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-04",
    "categories": [],
    "contents": "\n\nContents\nCreated using Distill\nKey advantages\nInstallation\nDistill blog hosted on Github Pages step-by-step instructions\nReferences\n\n\n\n                                                            sha256\n1 db79682f8bee39d7ed9231200fd076ebed92a4471a9f3ce611d0a5a28bb984a3\n\n\nShikokuchuo\nCreated using Distill\nThis website was created using Distill for R Markdown, a web publishing format optimised for scientific and technical communication.\nKey advantages\nR markdown to run R code (and all the possibility that brings)\nUse markdown / html interchangeably\nNo dependency on Hugo or Jekyll, so no lock-in or need to maintain those stacks\nOut-of-the-box support for mobile\nClean and attractive defaults\nMainly “just works”\nInstallation\nInstall release version of Distill from CRAN:\n\n\ninstall.packages(\"distill\")\n\n\n\nDistill blog hosted on Github Pages step-by-step instructions\nCreate a new blog at /blog of your current working directory in R:\n\n\ndistill::create_blog(dir = \"blog\", title = \"My New Blog\", gh_pages = TRUE)\n\n\n\nMake some inital changes to _site.yml. Select the ‘build’ tab in RStudio and hit ‘Build Website’. This will generate the website. Note: building the website does not generate blog posts. Each time the website is re-built, only the .Rmd files in the base directory will be automatically re-generated.\nModify the yaml front matter and content of the example blog post. Then hit ‘Knit’ in RStudio to generate the post. Note: after every change made to posts or after creating a new post, you must knit each post separately. The listings page is then automatically updated.\nCreate README.md and CNAME in /blog for your Github repository.\nREADME.md is optional but usual practice. CNAME is a text file containing the domain name if using a custom domain.\n\nCreate a new repository at Github.\nTo set up git and add your new repository as a remote, bring up the command line, cd to your /blog directory and:\n\ngit init\ngit add .\ngit commit -m \"initial commit\"\ngit branch -M main\ngit remote add origin git@github.com:username/nameofnew.git\ngit push -u origin main\n\n\nReplace ‘username/nameofnew.git’ as appropriate.\nAt Github, under your new repository, go to Settings >> Pages, set your source branch to ‘main’, and folder to ‘docs’. Optionally tick ‘Enforce HTTPS’.  Your custom domain name should be configured automatically if you have previously set up your DNS settings to point to Github’s servers.\nCongratulations, your new website should now be online!\nReferences\nThe Distill Reference: https://rstudio.github.io/distill/\nThe Definitive R Markdown Guide: https://bookdown.org/yihui/rmarkdown/\n\n\n\n",
    "preview": "posts/2021-05-04-distill/distill_files/figure-html5/index-1.png",
    "last_modified": "2021-05-04T19:25:20+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-05-04-ghactions/",
    "title": "Github Actions with R",
    "description": "Deploy and automate your code to the cloud",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-04",
    "categories": [],
    "contents": "\n\nContents\nGithub Actions with R\nReference\n\n\n\n                                                            sha256\n1 6f5b37d9b73dcd70f3c8b68eabbe00c4a709f2a3e694d964121af145105f1655\n\n\nShikokuchuo\nGithub Actions with R\nSet up a cron job to run your R scripts at specified times.\nEnabled with a simple yaml configuration file.\nSave the following as main.yml in .github/workflows of your Github repository:\n\nname: Raction\non:\n  schedule:\n    - cron: '30 22 * * 1-5'\njobs:\n  render:\n    runs-on: windows-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up R\n        uses: r-lib/actions/setup-r@v1\n      - name: Install dependencies\n        run: |\n          install.packages(c(\"magrittr\", \"purrr\"), type = \"win.binary\")\n        shell: Rscript {0}\n      - name: Script\n        run: Rscript nameofscript.R\n      - name: Commit files\n        run: |\n          git config --local user.name github-actions\n          git config --local user.email \"actions@github.com\"\n          git add output/*\n          git commit -am \"commit on $(date)\"\n          git push origin main\n        env:\n          REPO_KEY: ${{secrets.GITHUB_TOKEN}}\n          username: github-actions\n\nThis example cron job runs every Mon-Fri at 22.30.\nCustomize your R packages to install.\nMake sure to change nameofscript.R to your actual script name.\nAssumes your script writes files to the ‘output’ directory, change if necessary.\nAssumes your repository branch is ‘main’, change if necessary.\nNote that this script is run on a Windows VM using Windows R binary packages. This is currently much faster than building a lot of dependencies on Linux (which is also prone to failure).\nReference\nThe Github Actions with R reference: https://orchid00.github.io/actions_sandbox/\n\n\n\n",
    "preview": "posts/2021-05-04-ghactions/ghactions_files/figure-html5/index-1.png",
    "last_modified": "2021-05-04T19:24:28+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-05-03-rselenium/",
    "title": "R | Selenium",
    "description": "Programmatically drive a web browser",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-03",
    "categories": [],
    "contents": "\n\nContents\nUse case\nInitial setup\nRunning Selenium Webdriver\nRSelenium quickstart code\nReference\n\n\n\n                                                            sha256\n1 809e2e2a3967742faea6f9e11e0a4c533511f9710ac41812dcbcae3c78913cac\n\n\nShikokuchuo\nUse case\nWhenever you need to programmatically drive a web browser.\nMost often:\nto scrape information behind a login screen\nwhen the http server does not return a simple html document\nInitial setup\nPrerequisites: JRE or JDK installed on your system, Mozilla Firefox\nInstall the RSelenium package from CRAN:\n\n\ninstall.packages(\"RSelenium\")\n\n\n\nGo to https://selenium-release.storage.googleapis.com/index.html\nDownload selenium-server-standalone-4.0.0-alpha-2.jar (or whatever is the latest ‘selenium-server-standalone’ file)\nGo to https://github.com/mozilla/geckodriver\nDownload the latest Mozilla geckodriver release, and place in same directory as the jar file\nRunning Selenium Webdriver\nAt the terminal, first cd to the directory where your two new files are saved, then run:\n\njava -jar selenium-server-standalone-4.0.0-alpha-2.jar\n\nThe selenium server must be up and running before attempting to execute the R code below.\nRSelenium quickstart code\n\n\nlibrary(RSelenium)\nlibrary(keyring)\nlibrary(rvest)\nlibrary(magrittr)\n\n# Start Selenium Session\nremDr <- remoteDriver(\n  remoteServerAddr = \"localhost\",\n  port = 4444L,\n  browserName = \"firefox\"\n)\n\nremDr$open()\n\n# Navigate to login page\nremDr$navigate(\"https://website.com/login\")\nSys.sleep(5) # Give page time to load\n\n# Find 'username' element and send 'saved_user' as input\nwebElem1 <- remDr$findElement(using = \"xpath\", \"//input[@name = 'username']\")\nwebElem1$sendKeysToElement(list(key_get(\"saved_user\")))\n\n# Find 'password' element and send 'saved_pass' and 'enter' keystroke as input\nwebElem2 <- remDr$findElement(using = \"xpath\", \"//input[@name = 'password']\")\nwebElem2$sendKeysToElement(list(key_get(\"saved_pass\"), key = \"enter\"))\nSys.sleep(5) # Give page time to load\n\n# Navigate to desired page and download source\nremDr$navigate(\"https://website.com/somepage\")\nSys.sleep(5) # Give page time to load\nhtml <- remDr$getPageSource()[[1]] %>% read_html()\n\n# Use further rvest commands to extract required data\n# ...\n\n# End Selenium Session\nremDr$close()\n\n\n\nCustomise the URLs as required.\nCustomise the xpath to locate the desired input fields as they are actually named on your site.\n‘saved_user’ and ‘saved_pass’ are values already stored using the keyring package and retrieved here using the ‘key_get’ command. It is never a good idea to store plain text credentials in an R script.\nReference\nBasic vignette: https://docs.ropensci.org/RSelenium/articles/basics.html\n\n\n\n",
    "preview": "posts/2021-05-03-rselenium/rselenium_files/figure-html5/index-1.png",
    "last_modified": "2021-05-14T23:41:47+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-05-02-resources/",
    "title": "Resources for global sustainability",
    "description": "A compendium",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-02",
    "categories": [],
    "contents": "\n\nContents\nStockholm Resilience Center\nSvalbard Global Seed Vault\nThe National Academies of Sciences, Engineering, and Medicine\nOpenlearn, The Open University\nTED\nUI design x data science x climate change\n\n\n\n                                                            sha256\n1 3018cd1a5f671835e3116c2e2c6f937cf335b630cecc7de5d59b4059cff16999\n\n\nDawn over Shikokuchuo\nStockholm Resilience Center\nSustainability science for biosphere stewardship, Stockholm University\nVideo: Our future in the Anthropocene biosphere\n\n\nSvalbard Global Seed Vault\nSafeguarding Seeds for the Future\nEstablished and funded by the Norwegian Ministry of Agriculture and Food.\nProvides safe, free and long-term storage of seed duplicates from all genebanks and nations participating in the global community’s joint effort to ensure the world’s future food supply.\nThe facility serves a humanitarian purpose and is part of the international system for conserving plant genetic diversity guided by the UN organisation for Food and Agriculture (FAO).\nhttps://www.seedvault.no/\nThe National Academies of Sciences, Engineering, and Medicine\nMore than 100 leading scientists including many Nobel Prize winners issued a statement following two days of scientific deliberations at the first Nobel Prize Summit, 26-28 April 2021.\nExcerpts from the statement:\n\nGlobal heating and habitat loss amount to nothing less than a vast and\nuncontrolled experiment on Earth’s life-support system.\n\nTime is running out to prevent irreversible changes.\n\nThe remaining carbon budget for a 67% probability of not exceeding 1.5°C global\nwarming will be exhausted before 2030. \n\nGlobal sustainability offers the only viable path to human safety, equity,\nhealth, and progress.\n\nHumanity is waking up late to the challenges and opportunities of active\nplanetary stewardship. But we *are* waking up.\n\nFull text: https://www.nationalacademies.org/news/2021/04/nobel-prize-laureates-and-other-experts-issue-urgent-call-for-action-after-our-planet-our-future-summit\nOpenlearn, The Open University\nGreta Thunberg: A Year to change the World\nEncounters with some of the world’s leading scientists and economists allow the series to examine what the latest science tells us about what can be done to avert the worst effects of climate change.\nhttps://www.open.edu/openlearn/tv-radio-events/tv/greta-thunberg-year-change-the-world\nTED\nStephen Hawking Questioning the universe  TED February 2008\n\n\n\n\n\n\n\nTranscript: 09:06 | Stephen Hawking: I think it quite likely that we are the only civilization within several hundred light years; otherwise we would have heard radio waves. The alternative is that civilizations don’t last very long, but destroy themselves.\nUI design x data science x climate change\nWhat can a technologist do about climate change?\nBret Victor: A personal view.\nhttp://worrydream.com/ClimateChange/\n\n\n\n",
    "preview": "posts/2021-05-02-resources/resources_files/figure-html5/index-1.png",
    "last_modified": "2021-05-05T09:59:11+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-05-01-authenticating/",
    "title": "Authenticating photography using cryptographic hashing",
    "description": "A proof of concept using R",
    "author": [
      {
        "name": "shikokuchuo",
        "url": {}
      }
    ],
    "date": "2021-05-01",
    "categories": [],
    "contents": "\n\nContents\nReproducible R code and authentification\nAs applied to a digital photography workflow\n\nReproducible R code and authentification\nR is an open source programming language popular amongst statisticians and data scientists. The power of the R framework is enhanced through the tens of thousands of packages contributed by the open source community that extends and enhances R. 1\nThe below code is a simple proof of concept of using cryptographic hashing as a method for authentification of original photographic files. The code simply retrieves the files in a certain folder and loads them into R using the imager 2 package and plots them, here on the page, but it could easily be another output device such as writing to jpeg or pdf. At the same time, the original file is run through a sha256 cryptographic hash from the openssl 3 package. sha256 is a one-way algorithm that takes an input and generates a hexadecimal sequence 64 long. As the input file may be arbitrarily large, it can easily be seen that the information loss in arriving at the hash precludes the possibility of going in the other direction i.e. retrieving the original data from the hash. The properties of the hashing algorithm include that small changes to the input file can result in completely different hash values. The chances of collision i.e. two different data files generating the exact same hash is vanishingly small.\n\n\nphotos <- file.path(\"_images\", list.files(\"_images\"))\ndevelop <- function(x) {\n  plot(imager::load.image(x), axes = FALSE)\n  paste0(openssl::sha256(file(x)))\n}\npar(mar = c(0, 0, 0, 0))\ndata.frame(sha256 = do.call(rbind, lapply(photos, develop)))\n\n\n\n                                                            sha256\n1 cba0450d38b74f2585868d2aa026a96de735a8f73a54889366d62bbdfdcc8661\n2 a63b055e11765cf36fa065be413b0bb5deb89d6cfba0c9feac7b9946e9c76ece\n3 f06eb35ea2bea1166e3147d30a846069fa5fd969717185d3e27821cea9257999\n4 0e6cc2bf63313153c6f3aa3206a0dc1d3eb41e6a5a570b48ea5021e437672f99\n\n\nNote: sha256 hashes are of the original files. Saving and hashing the images on this page would produce completely different hashes.\nThe output image along with the sha256 hash of the original can then be published together. The photographer is then able to freely share their work, which does not then need to be downsized, degraded or watermarked, as long as the data of the original file has undergone some form of transformation (that is not trivially reversible) to produce the output. The hash is the proof of authenticity of the original, which only the original artist possesses.\nTo prove authorship, the artist just needs to run the above function again, which would produce the same output and same hash values, and is an example of the benefits of reproducibility in writing R code.\nAs applied to a digital photography workflow\nEquivalent to the example demonstrated here, the workflow of digital photographers is often to take a RAW camera file, and perform edits using photo processing software 4, before generating an output. Software generally keeps the RAW file intact as a form of “digital negative”, but adds the edits in a layer stored separately either as a “sidecar” file or in a database etc. depending on the software. Photographers often take the output and store a best quality version as their “master”.\nOur approach would differ in treating the RAW file as the “original”, which allows a high-quality output to then be published along with the sha256 of the RAW file. The artist retains the RAW file, along with the sidecar file and software that generates the output, as proof of authorship. This works of course only where the artist can ensure reproducibility of the output, and using open source software where the edits are stored transparently in a human-readable format would afford greater confidence in such a workflow.\n\nThe largest listing of packages may be found at The Comprehensive R Archive Network: https://cloud.r-project.org/↩︎\nimager R package: https://dahtah.github.io/imager/↩︎\nopenssl R package: https://github.com/jeroen/openssl↩︎\nA popular example of such photo-editing software is the open source Darktable https://www.darktable.org/↩︎\n",
    "preview": "posts/2021-05-01-authenticating/authenticating_files/figure-html5/index-1.png",
    "last_modified": "2021-05-04T16:13:14+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
